import React, { useState, useEffect, useMemo, useContext, useReducer } from 'react';
import { withRouter, matchPath, Route as Route$1, Redirect, Link as Link$2 } from 'react-router-dom';
import { CSSTransition } from 'react-transition-group';

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

var computeClassName = function computeClassName(disable, className, defaultClassName) {
  return disable ? typeof className === 'string' ? className : typeof className === 'function' ? className() : '' : typeof className === 'string' ? defaultClassName + " " + className : typeof className === 'function' ? defaultClassName + "  " + className() : defaultClassName;
};

// https://stackoverflow.com/questions/52097564/forward-ref-through-react-routers-withrouter-hoc

var withRouterAndRef = function withRouterAndRef(Wrapped) {
  var WithRouter = withRouter(function (_ref) {
    var forwardRef = _ref.forwardRef,
        otherProps = _objectWithoutPropertiesLoose(_ref, ["forwardRef"]);

    return React.createElement(Wrapped, _extends({
      ref: forwardRef
    }, otherProps));
  });
  var WithRouterAndRef = React.forwardRef(function (props, ref) {
    return React.createElement(WithRouter, _extends({}, props, {
      forwardRef: ref
    }));
  });
  var name = Wrapped.displayName || Wrapped.name;
  WithRouterAndRef.displayName = "withRouterAndRef(" + name + ")";
  return WithRouterAndRef;
};

var getEasing = function getEasing(easing) {
  switch (easing) {
    case 'easeInSine':
      {
        return 'cubic-bezier(0.47, 0, 0.745, 0.715)';
      }

    case 'easeOutSine':
      {
        return 'cubic-bezier(0.39, 0.575, 0.565, 1)';
      }

    case 'easeInOutSine':
      {
        return 'cubic-bezier(0.445, 0.05, 0.55, 0.95)';
      }

    case 'easeInCubic':
      {
        return 'cubic-bezier(0.55, 0.055, 0.675, 0.19)';
      }

    case 'easeOutCubic':
      {
        return 'cubic-bezier(0.215, 0.61, 0.355, 1)';
      }

    case 'easeInOutCubic':
      {
        return 'cubic-bezier(0.645, 0.045, 0.355, 1)';
      }

    case 'easeInQuint':
      {
        return 'cubic-bezier(0.755, 0.05, 0.855, 0.06)';
      }

    case 'easeOutQuint':
      {
        return 'cubic-bezier(0.23, 1, 0.32, 1)';
      }

    case 'easeInOutQuint':
      {
        return 'cubic-bezier(0.86, 0, 0.07, 1)';
      }

    case 'easeInCirc':
      {
        return 'cubic-bezier((0.6, 0.04, 0.98, 0.335)';
      }

    case 'easeOutCirc':
      {
        return 'cubic-bezier(0.075, 0.82, 0.165, 1)';
      }

    case 'easeInOutCirc':
      {
        return 'cubic-bezier(0.785, 0.135, 0.15, 0.86)';
      }

    case 'easeInQuad':
      {
        return 'cubic-bezier(0.55, 0.085, 0.68, 0.53)';
      }

    case 'easeOutQuad':
      {
        return 'cubic-bezier(0.25, 0.46, 0.45, 0.94)';
      }

    case 'easeInOutQuad':
      {
        return 'cubic-bezier(0.455, 0.03, 0.515, 0.955)';
      }

    case 'easeInQuart':
      {
        return 'cubic-bezier(0.895, 0.03, 0.685, 0.22)';
      }

    case 'easeOutQuart':
      {
        return 'cubic-bezier(0.165, 0.84, 0.44, 1)';
      }

    case 'easeInOutQuart':
      {
        return 'cubic-bezier(0.77, 0, 0.175, 1)';
      }

    case 'easeInExpo':
      {
        return 'cubic-bezier(0.95, 0.05, 0.795, 0.035)';
      }

    case 'easeOutExpo':
      {
        return 'cubic-bezier(0.19, 1, 0.22, 1)';
      }

    case 'easeInOutExpo':
      {
        return 'cubic-bezier(1, 0, 0, 1)';
      }

    case 'easeInBack':
      {
        return 'cubic-bezier(0.6, -0.28, 0.735, 0.045)';
      }

    case 'easeOutBack':
      {
        return 'cubic-bezier(0.175, 0.885, 0.32, 1.275)';
      }

    case 'easeInOutBack':
      {
        return 'cubic-bezier(0.68, -0.55, 0.265, 1.55)';
      }

    default:
      {
        return easing;
      }
  }
};

function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) _setPrototypeOf(subClass, superClass);
}

function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}

function _isNativeFunction(fn) {
  return Function.toString.call(fn).indexOf("[native code]") !== -1;
}

function isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

function _construct(Parent, args, Class) {
  if (isNativeReflectConstruct()) {
    _construct = Reflect.construct;
  } else {
    _construct = function _construct(Parent, args, Class) {
      var a = [null];
      a.push.apply(a, args);
      var Constructor = Function.bind.apply(Parent, a);
      var instance = new Constructor();
      if (Class) _setPrototypeOf(instance, Class.prototype);
      return instance;
    };
  }

  return _construct.apply(null, arguments);
}

function _wrapNativeSuper(Class) {
  var _cache = typeof Map === "function" ? new Map() : undefined;

  _wrapNativeSuper = function _wrapNativeSuper(Class) {
    if (Class === null || !_isNativeFunction(Class)) return Class;

    if (typeof Class !== "function") {
      throw new TypeError("Super expression must either be null or a function");
    }

    if (typeof _cache !== "undefined") {
      if (_cache.has(Class)) return _cache.get(Class);

      _cache.set(Class, Wrapper);
    }

    function Wrapper() {
      return _construct(Class, arguments, _getPrototypeOf(this).constructor);
    }

    Wrapper.prototype = Object.create(Class.prototype, {
      constructor: {
        value: Wrapper,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    return _setPrototypeOf(Wrapper, Class);
  };

  return _wrapNativeSuper(Class);
}

function _wrapRegExp(re, groups) { _wrapRegExp = function _wrapRegExp(re, groups) { return new BabelRegExp(re, undefined, groups); }; var _RegExp = _wrapNativeSuper(RegExp); var _super = RegExp.prototype; var _groups = new WeakMap(); function BabelRegExp(re, flags, groups) { var _this = _RegExp.call(this, re, flags); _groups.set(_this, groups || _groups.get(re)); return _this; } _inherits(BabelRegExp, _RegExp); BabelRegExp.prototype.exec = function (str) { var result = _super.exec.call(this, str); if (result) result.groups = buildGroups(result, this); return result; }; BabelRegExp.prototype[Symbol.replace] = function (str, substitution) { if (typeof substitution === "string") { var groups = _groups.get(this); return _super[Symbol.replace].call(this, str, substitution.replace(/\$<([^>]+)>/g, function (_, name) { return "$" + groups[name]; })); } else if (typeof substitution === "function") { var _this = this; return _super[Symbol.replace].call(this, str, function () { var args = []; args.push.apply(args, arguments); if (typeof args[args.length - 1] !== "object") { args.push(buildGroups(args, _this)); } return substitution.apply(this, args); }); } else { return _super[Symbol.replace].call(this, str, substitution); } }; function buildGroups(result, re) { var g = _groups.get(re); return Object.keys(g).reduce(function (groups, name) { groups[name] = result[g[name]]; return groups; }, Object.create(null)); } return _wrapRegExp.apply(this, arguments); }

/**
 *  basic css processor for tiger
 *  designed only for css written in tigers folder
 *
 */
var prefixes = [{
  name: 'transform',
  prefixes: ['-webkit-', '-ms-']
}, {
  name: 'transition',
  prefixes: ['-o-', '-webkit-']
}, {
  name: 'transition-delay',
  prefixes: ['-o-', '-webkit-']
}, {
  name: 'transition-duration',
  prefixes: ['-o-', '-webkit-']
}, {
  name: 'transition-timing-function',
  prefixes: ['-o-', '-webkit-']
}, {
  name: 'transform-origin',
  prefixes: ['-ms-', '-webkit-']
}, {
  name: 'animation',
  prefixes: ['-webkit-']
}, {
  name: 'animation-delay',
  prefixes: ['-webkit-']
}, {
  name: 'animation-timing-function',
  prefixes: ['-webkit-']
}];
var prefixer = function prefixer(string, sep) {
  if (sep === void 0) {
    sep = '\n';
  }

  var prefixedString = string;

  var regex = _wrapRegExp(/([a-z-]+) *:([^:;]+;)/gm, {
    property: 1,
    value: 2
  });

  var match;

  while (match = regex.exec(string)) {
    // eslint-disable-line
    var prefix = prefixes.filter(function (p) {
      return p.name === match.groups.property;
    })[0]; // eslint-disable-line

    if (prefix) {
      var prefixedProperty = '';
      prefix.prefixes.map(function (p, i) {
        // eslint-disable-line
        // insert tab after first line to keep it pretty
        prefixedProperty += "" + (i > 0 ? '\t' : '') + p + match[0] + sep;
      });
      prefixedProperty += "\t" + match[0];
      prefixedString = prefixedString.replace(match[0], prefixedProperty);
    }
  } // test for @keyframes
  // keyframes are always last item


  regex = /keyframes[\s\S]*\}/g;
  match = regex.exec(prefixedString);

  if (match) {
    prefixedString += "@-webkit-" + match[0];
  }

  return prefixedString;
};

// postcss injectStyle function
function styleInject(css, name, ref) {
  if (ref === void 0) {
    ref = {};
  }

  var created = document.querySelector("[data-meta=" + name + "]");
  if (created) created.remove();
  var _ref = ref,
      insertAt = _ref.insertAt;

  if (!css || typeof document === 'undefined') {
    return;
  }

  var computedCSS = prefixer(css);
  var head = document.head || document.getElementsByTagName('head')[0];
  var style = document.createElement('style');
  style.type = 'text/css';
  style.setAttribute('data-meta', name);

  if (insertAt === 'top') {
    if (head.firstChild) {
      head.insertBefore(style, head.firstChild);
    } else {
      head.appendChild(style);
    }
  } else {
    head.appendChild(style);
  }

  if (style.styleSheet) {
    style.styleSheet.cssText = computedCSS;
  } else {
    style.appendChild(document.createTextNode(computedCSS));
  }
}

var ScreenBase = React.forwardRef(function (_ref, ref) {
  var className = _ref.className,
      children = _ref.children,
      other = _objectWithoutPropertiesLoose(_ref, ["className", "children"]);

  return React.createElement("div", _extends({
    ref: ref,
    className: className
  }, other), children);
});
ScreenBase.displayName = 'TigerScreenBase';
ScreenBase.defaultProps = {
  className: ''
};
var Display = withRouter(function (_ref2) {
  var match = _ref2.match,
      location = _ref2.location,
      children = _ref2.children;

  var _useState = useState(true),
      isFirstRender = _useState[0],
      setIsFirstRender = _useState[1];

  var _useState2 = useState(match),
      baseMatch = _useState2[0],
      setBaseMatch = _useState2[1]; // eslint-disable-line no-unused-vars


  var _useState3 = useState(null),
      mountedChild = _useState3[0],
      setMountedChild = _useState3[1];

  useEffect(function () {
    try {
      React.Children.forEach(children, function (child) {
        if (React.isValidElement(child)) {
          if (children.length > 0) {
            if (!child.key || children.filter(function (c) {
              return !c;
            }).filter(function (c) {
              return c.key === child.key;
            }).length > 0) {
              throw new Error('Each child of <Screen display /> should have a unique key.');
            }
          } else if (!child.key) {
            throw new Error('Each child of <Screen display /> should have a unique key.');
          }
        }
      });
    } catch (e) {
      try {
        console.error(e);
      } // Non-standard
      catch (_unused) {
        console.log(e);
      }
    }

    setIsFirstRender(false);
  }, []);
  var onDisplayPath = matchPath(location.pathname, _extends({}, baseMatch)) !== null;
  var cancelAnimation = isFirstRender || !onDisplayPath;
  var computeChildren = useMemo(function () {
    var clonedChildren = [];
    var element;
    React.Children.forEach(children, function (child) {
      if (React.isValidElement(child)) {
        var overridesPath = !isFirstRender && cancelAnimation && child.key === mountedChild ? {
          path: location.pathname
        } : {};
        element = child;
        clonedChildren.push(React.cloneElement(element, _extends({
          cancelAnimation: cancelAnimation
        }, overridesPath)));
      }
    });
    return clonedChildren;
  }, [children, cancelAnimation]);
  useEffect(function () {
    if (!isFirstRender && onDisplayPath) {
      React.Children.forEach(computeChildren, function (child) {
        if (React.isValidElement(child) && child.props.path === location.pathname) {
          setMountedChild(child.key);
        }
      });
    }
  }, [location.pathname, isFirstRender]);
  return useMemo(function () {
    return React.createElement(React.Fragment, null, computeChildren);
  }, [computeChildren, cancelAnimation]);
});
/**
 * @description
 * A div with some default css applied to it. Designed to be child of [`<route />`](/docs/route),
 * or parent if passed the `display` prop.
 *
 * @afterProps
 * \*Ref and other props are passed to div container.
 *
 */

var Screen = React.forwardRef(function (_ref3, ref) {
  var className = _ref3.className,
      disableStyle = _ref3.disableStyle,
      container = _ref3.container,
      display = _ref3.display,
      children = _ref3.children,
      other = _objectWithoutPropertiesLoose(_ref3, ["className", "disableStyle", "container", "display", "children"]);

  var _className = computeClassName(disableStyle, className, "react-tiger-transition--" + (container || display ? 'container' : 'screen'));

  var props = _extends({
    className: _className,
    ref: ref
  }, other);

  return display ? React.createElement(ScreenBase, props, React.createElement(Display, null, children)) : React.createElement(ScreenBase, props, children);
});
Screen.displayName = 'TigerScreen';
Screen.defaultProps = {
  disableStyle: false,
  container: false,
  display: false
};

var NavigationContext = React.createContext();

/**
 *
 * @description
 * Route uses the original
 * [react-router `<Route />`](https://reacttraining.com/react-router/web/api/Route).
 * It wraps the children with a transition component based on
 * [`<Transition />`](https://reactcommunity.org/react-transition-group/transition)
   and [`<CSSTransition />`](https://reactcommunity.org/react-transition-group/css-transition).
 *
 * Must be used inside [`<Navigation />`](/docs/navigation) to allow [`<Link />`](/docs/link)
 * to consume context.
 *
 * Comes with some default css class that you can disable or chain with
 * your custom classes.
 *
 * @afterProps
 * \*Any other prop is passed to
 * [react router `<Route />`](https://reacttraining.com/react-router/web/api/Route).
 *
 */

var Route = function Route(_ref) {
  var children = _ref.children,
      className = _ref.className,
      disableStyle = _ref.disableStyle,
      containerProps = _ref.containerProps,
      transitionProps = _ref.transitionProps,
      screen = _ref.screen,
      screenProps = _ref.screenProps,
      cancelAnimation = _ref.cancelAnimation,
      skip = _ref.skip,
      other = _objectWithoutPropertiesLoose(_ref, ["children", "className", "disableStyle", "containerProps", "transitionProps", "screen", "screenProps", "cancelAnimation", "skip"]);

  var _className = computeClassName(disableStyle, className, "react-tiger-transition--route");

  var cancelTransition = cancelAnimation ? {
    onEnter: function onEnter() {},
    onEntering: function onEntering() {},
    onEntered: function onEntered() {},
    onExit: function onExit() {},
    onExiting: function onExiting() {},
    onExited: function onExited() {},
    classNames: 'canceled-transition'
  } : {};

  var _useContext = useContext(NavigationContext),
      transition = _useContext.transition,
      globalTransitionProps = _useContext.globalTransitionProps;

  return React.createElement(Route$1, other, function (props) {
    return React.createElement(CSSTransition, _extends({
      "in": props.match != null // eslint-disable-line react/prop-types

    }, globalTransitionProps, transition, transitionProps, cancelTransition), React.createElement("div", _extends({
      className: _className
    }, containerProps), screen ? React.createElement(Screen, screenProps, children) : children));
  });
};

Route.defaultProps = {
  disableStyle: false,
  screen: false,
  screenProps: {},
  transitionProps: {},
  cancelAnimation: false
};
Route.displayName = 'TigerRoute';

var evalTransition = function evalTransition(_ref) {
  var transition = _ref.transition,
      timeout = _ref.timeout;
  var computeTimeout = timeout ? {
    timeout: timeout
  } : {};
  return typeof transition === 'function' ? _extends({}, computeTimeout, {}, transition()) : Object.prototype.toString.call(transition) === '[object Object]' ? _extends({}, computeTimeout, {}, transition) : typeof transition === 'string' ? _extends({}, computeTimeout, {
    classNames: transition
  }) : {
    timeout: 0,
    classNames: ''
  };
};
function reducer(state, action) {
  switch (action.type) {
    case 'setTransition':
      {
        var transition = evalTransition(_extends({}, action.value));
        window.setTimeout(function () {
          action.dispatch({
            type: 'endTransition'
          });
        }, transition.timeout + 200);
        return _extends({}, state, {
          transition: transition,
          onTransition: true
        });
      }

    case 'endTransition':
      {
        return _extends({}, state, {
          onTransition: false
        });
      }

    default:
      {
        return _extends({}, state);
      }
  }
}
var NavigationProvider = withRouter(function (_ref2) {
  var children = _ref2.children,
      defaultRoute = _ref2.defaultRoute,
      DefaultRouteWrapper = _ref2.DefaultRouteWrapper,
      initialState = _ref2.initialState,
      disableDefaultRoute = _ref2.disableDefaultRoute,
      match = _ref2.match,
      location = _ref2.location;

  var _useReducer = useReducer(reducer, _extends({}, initialState, {
    setTransition: function setTransition(transition, timeout) {
      return new Promise(function (resolve) {
        resolve(dispatch({
          type: 'setTransition',
          value: {
            transition: transition,
            timeout: timeout
          },
          dispatch: dispatch
        }));
      });
    }
  })),
      state = _useReducer[0],
      dispatch = _useReducer[1];

  var matched = useMemo(function () {
    var computeMatch;
    React.Children.forEach(children, function (child) {
      if (computeMatch == null && React.isValidElement(child)) {
        var path = child.props.path || child.props.from || null;
        computeMatch = path && !child.props.skip ? matchPath(location.pathname, _extends({}, child.props, {
          path: path
        })) : null;
      }
    });
    return computeMatch != null;
  }, [children, location, match]);
  return React.createElement(NavigationContext.Provider, {
    value: _extends({}, state)
  }, children, !disableDefaultRoute && defaultRoute && DefaultRouteWrapper && React.createElement(DefaultRouteWrapper, {
    transitionProps: {
      "in": !matched
    }
  }, defaultRoute));
});
var globalTransitionPropsDefaultValues = {
  unmountOnExit: true,
  timeout: 600
};
/**
 *
 * @description
 * The context provider for [`<Link />`](/docs/link). Allow link to change
 * transition on click, before the routing. This makes possible to build as
 * many different transitions for the same route as possible, all evaluated
 * on the fly.
 *
 */

var Navigation = function Navigation(_ref3) {
  var children = _ref3.children,
      containerProps = _ref3.containerProps,
      globalTransitionProps = _ref3.globalTransitionProps,
      other = _objectWithoutPropertiesLoose(_ref3, ["children", "containerProps", "globalTransitionProps"]);

  return React.createElement(Screen, _extends({
    container: true
  }, containerProps), React.createElement(NavigationProvider, _extends({}, other, {
    initialState: {
      transition: evalTransition({
        transition: globalTransitionProps.classNames,
        timeout: globalTransitionProps.timeout
      }),
      currentTransition: null,
      onTransition: false,
      globalTransitionProps: _extends({}, globalTransitionPropsDefaultValues, {}, globalTransitionProps)
    }
  }), children));
};

var DefaultRouteWrapper = function DefaultRouteWrapper(_ref4) {
  var transitionProps = _ref4.transitionProps,
      children = _ref4.children;
  return React.createElement(Route, {
    screen: true,
    transitionProps: transitionProps
  }, children);
};

Navigation.defaultProps = {
  defaultRoute: React.createElement(Redirect, {
    to: "/"
  }),
  globalTransitionProps: globalTransitionPropsDefaultValues,
  disableDefaultRoute: false,
  DefaultRouteWrapper: DefaultRouteWrapper
};

/**
 * @description
 * Change transitions on the fly. The next transition is evaluated before
 * the route change, allowing to easily reach and leave the same url with
 * different transitions.
 *
 * @afterProps
 * \*Ref and other props are passed to [react router `<Link />`](https://reacttraining.com/react-router/web/api/Link).
 *
 */

var Link = React.forwardRef(function (_ref, ref) {
  var match = _ref.match,
      location = _ref.location,
      history = _ref.history,
      staticContext = _ref.staticContext,
      children = _ref.children,
      to = _ref.to,
      transition = _ref.transition,
      _onClick = _ref.onClick,
      timeout = _ref.timeout,
      other = _objectWithoutPropertiesLoose(_ref, ["match", "location", "history", "staticContext", "children", "to", "transition", "onClick", "timeout"]);

  var _useContext = useContext(NavigationContext),
      setTransition = _useContext.setTransition,
      globalTransitionProps = _useContext.globalTransitionProps,
      onTransition = _useContext.onTransition;

  return React.createElement(Link$2, _extends({
    onClick: function onClick() {
      if (!onTransition) {
        setTransition(transition || globalTransitionProps.classNames, timeout);
        if (typeof _onClick === 'function') _onClick();
      }
    },
    ref: ref,
    to: onTransition ? location.pathname : to // eslint-disable-line react/prop-types

  }, other), children);
});
Link.displayName = 'TigerLink';
var Link$1 = withRouterAndRef(Link);

var buildTiger = (function (argsInit, enterInit, enterTransition, exitInit, exitTransition) {
  return function (_temp) {
    var _ref = _temp === void 0 ? {} : _temp,
        _ref$name = _ref.name,
        name = _ref$name === void 0 ? '' : _ref$name,
        _ref$enter = _ref.enter,
        enter = _ref$enter === void 0 ? {} : _ref$enter,
        _ref$exit = _ref.exit,
        exit = _ref$exit === void 0 ? {} : _ref$exit,
        args = _objectWithoutPropertiesLoose(_ref, ["name", "enter", "exit"]);

    styleInject(enterTransition(_extends({
      name: name
    }, enterInit, {}, enter, {}, argsInit, {}, args)), name + "-enter");
    styleInject(exitTransition(_extends({
      name: name
    }, exitInit, {}, exit, {}, argsInit, {}, args)), name + "-exit");
  };
});

var flipIn = (function (_temp) {
  var _ref = _temp === void 0 ? {} : _temp,
      _ref$name = _ref.name,
      name = _ref$name === void 0 ? 'flip' : _ref$name,
      _ref$direction = _ref.direction,
      direction = _ref$direction === void 0 ? 'left' : _ref$direction,
      _ref$duration = _ref.duration,
      duration = _ref$duration === void 0 ? 500 : _ref$duration,
      _ref$easing = _ref.easing,
      easing = _ref$easing === void 0 ? 'easeOutQuad' : _ref$easing,
      _ref$opacity = _ref.opacity,
      opacity = _ref$opacity === void 0 ? 0.2 : _ref$opacity,
      _ref$zIndex = _ref.zIndex,
      zIndex = _ref$zIndex === void 0 ? 1 : _ref$zIndex,
      _ref$depth = _ref.depth,
      depth = _ref$depth === void 0 ? 1000 : _ref$depth;

  var config = {
    left: {
      transform: "translateZ(" + -depth + "px) rotateY(-90deg)",
      transformActive: 'translateZ(0px) rotateY(0deg)'
    },
    right: {
      transform: "translateZ(" + -depth + "px) rotateY(90deg)",
      transformActive: 'translateZ(0px) rotateY(0deg)'
    },
    top: {
      transform: "translateZ(" + -depth + "px) rotateX(-90deg)",
      transformActive: 'translateZ(0px) rotateX(0deg)'
    },
    bottom: {
      transform: "translateZ(" + -depth + "px) rotateX(90deg)",
      transformActive: 'translateZ(0px) rotateX(0deg)'
    }
  };
  var transition = "transform, opacity";
  var delay = duration;
  var style = "\n  ." + name + "-enter {\n    transformOrigin: '50% 50%';\n    transform: " + config[direction].transform + ";\n    z-index: " + zIndex + ";\n    opacity: " + opacity + ";\n  }\n  ." + name + "-enter-active {\n    transform: " + config[direction].transformActive + ";\n    opacity: 1;\n    transition: " + transition + ";\n    transition-delay: " + delay + "ms;\n    transition-duration: " + duration + "ms;\n    transition-timing-function: " + getEasing(easing) + ";\n  }\n  ";
  return style;
});

var flipOut = (function (_temp) {
  var _ref = _temp === void 0 ? {} : _temp,
      _ref$name = _ref.name,
      name = _ref$name === void 0 ? 'flip' : _ref$name,
      _ref$direction = _ref.direction,
      direction = _ref$direction === void 0 ? 'left' : _ref$direction,
      _ref$duration = _ref.duration,
      duration = _ref$duration === void 0 ? 500 : _ref$duration,
      _ref$easing = _ref.easing,
      easing = _ref$easing === void 0 ? 'easeInQuad' : _ref$easing,
      _ref$opacity = _ref.opacity,
      opacity = _ref$opacity === void 0 ? 0.2 : _ref$opacity,
      _ref$zIndex = _ref.zIndex,
      zIndex = _ref$zIndex === void 0 ? 2 : _ref$zIndex,
      _ref$depth = _ref.depth,
      depth = _ref$depth === void 0 ? 1000 : _ref$depth;

  var config = {
    left: "translateZ(" + -depth + "px) rotateY(90deg)",
    right: "translateZ(" + -depth + "px) rotateY(-90deg)",
    top: "translateZ(" + -depth + "px) rotateX(90deg)",
    bottom: "translateZ(" + -depth + "px) rotateX(-90deg)"
  };
  var transition = "transform, opacity";
  var style = "\n  ." + name + "-exit {\n    z-index: " + zIndex + ";\n  }\n  ." + name + "-exit-active {\n    transform: " + config[direction] + ";\n    opacity: " + opacity + ";\n    transition: " + transition + ";\n    transition-duration: " + duration + "ms;\n    transition-timing-function: " + getEasing(easing) + ";\n  }\n  ";
  return style;
});

var flip = buildTiger( // common
{
  direction: 'left',
  duration: 300
}, // enter
{
  easing: 'easeOutQuad',
  opacity: 0.2,
  zIndex: 1,
  depth: 1000
}, flipIn, // exit
{
  easing: 'easeInQuad',
  opacity: 0.2,
  zIndex: 2,
  depth: 1000
}, flipOut);

var glideIn = (function (_temp) {
  var _ref = _temp === void 0 ? {} : _temp,
      _ref$name = _ref.name,
      name = _ref$name === void 0 ? 'glide' : _ref$name,
      _ref$direction = _ref.direction,
      direction = _ref$direction === void 0 ? 'left' : _ref$direction,
      _ref$duration = _ref.duration,
      duration = _ref$duration === void 0 ? 600 : _ref$duration,
      _ref$easing = _ref.easing,
      easing = _ref$easing === void 0 ? 'ease' : _ref$easing,
      _ref$opacity = _ref.opacity,
      opacity = _ref$opacity === void 0 ? 1 : _ref$opacity,
      _ref$zIndex = _ref.zIndex,
      zIndex = _ref$zIndex === void 0 ? 2 : _ref$zIndex,
      _ref$delay = _ref.delay,
      delay = _ref$delay === void 0 ? 0 : _ref$delay,
      _ref$scale = _ref.scale,
      scale = _ref$scale === void 0 ? 1 : _ref$scale;

  var config = {
    right: [-100, 'X'],
    left: [100, 'X'],
    bottom: [-100, 'Y'],
    top: [100, 'Y']
  };
  var transform = "scale(" + scale + ") translate" + config[direction][1] + "(" + config[direction][0] + "%)";
  var transformActive = "scale(1) translate" + config[direction][1] + "(0px)";
  var transition = "transform, opacity";
  var style = "\n  ." + name + "-enter {\n    transform: " + transform + ";\n    z-index: " + zIndex + ";\n    opacity: " + opacity + ";\n  }\n  ." + name + "-enter-active {\n    transform: " + transformActive + ";\n    opacity: 1;\n    transition: " + transition + ";\n    transition-delay: " + delay + "ms;\n    transition-duration: " + duration + "ms;\n    transition-timing-function: " + getEasing(easing) + ";\n  }\n  ";
  return style;
});

var glideOut = (function (_temp) {
  var _ref = _temp === void 0 ? {} : _temp,
      _ref$name = _ref.name,
      name = _ref$name === void 0 ? 'glide' : _ref$name,
      _ref$direction = _ref.direction,
      direction = _ref$direction === void 0 ? 'left' : _ref$direction,
      _ref$duration = _ref.duration,
      duration = _ref$duration === void 0 ? 600 : _ref$duration,
      _ref$easing = _ref.easing,
      easing = _ref$easing === void 0 ? 'ease' : _ref$easing,
      _ref$opacity = _ref.opacity,
      opacity = _ref$opacity === void 0 ? 1 : _ref$opacity,
      _ref$zIndex = _ref.zIndex,
      zIndex = _ref$zIndex === void 0 ? 1 : _ref$zIndex,
      _ref$delay = _ref.delay,
      delay = _ref$delay === void 0 ? 0 : _ref$delay,
      _ref$scale = _ref.scale,
      scale = _ref$scale === void 0 ? 1 : _ref$scale;

  var config = {
    left: [-100, 'X'],
    right: [100, 'X'],
    top: [-100, 'Y'],
    bottom: [100, 'Y']
  };
  var transformActive = "scale(" + scale + ") translate" + config[direction][1] + "(" + config[direction][0] + "%)";
  var transition = "transform, opacity";
  var style = "\n  ." + name + "-exit {\n    z-index: " + zIndex + ";\n  }\n  ." + name + "-exit-active {\n    transform: " + transformActive + ";\n    opacity: " + opacity + ";\n    transition: " + transition + ";\n    transition-delay: " + delay + "ms;\n    transition-duration: " + duration + "ms;\n    transition-timing-function: " + getEasing(easing) + ";\n  }\n  ";
  return style;
});

var glide = buildTiger( // common
{
  direction: 'left'
}, // enter
{
  duration: 600,
  easing: 'easeOutQuad',
  opacity: 1,
  zIndex: 2,
  scale: 1,
  delay: 0
}, glideIn, // exit
{
  duration: 600,
  easing: 'easeOutQuad',
  opacity: 0.3,
  zIndex: 1,
  scale: 1,
  delay: 0
}, glideOut);

var shuffleOut = (function (_temp) {
  var _ref = _temp === void 0 ? {} : _temp,
      _ref$name = _ref.name,
      name = _ref$name === void 0 ? 'glide' : _ref$name,
      _ref$direction = _ref.direction,
      direction = _ref$direction === void 0 ? 'left' : _ref$direction,
      _ref$duration = _ref.duration,
      duration = _ref$duration === void 0 ? 600 : _ref$duration,
      _ref$easing = _ref.easing,
      easing = _ref$easing === void 0 ? 'ease' : _ref$easing,
      _ref$opacity = _ref.opacity,
      opacity = _ref$opacity === void 0 ? 1 : _ref$opacity,
      _ref$zIndex = _ref.zIndex,
      zIndex = _ref$zIndex === void 0 ? 1 : _ref$zIndex,
      _ref$delay = _ref.delay,
      delay = _ref$delay === void 0 ? 0 : _ref$delay,
      _ref$scale = _ref.scale,
      scale = _ref$scale === void 0 ? 1 : _ref$scale;

  var config = {
    left: [100, 'X'],
    right: [-100, 'X'],
    top: [100, 'Y'],
    bottom: [-100, 'Y']
  };
  var transformActive = "scale(" + scale + ") translate" + config[direction][1] + "(" + config[direction][0] + "%)";
  var transition = "transform, opacity";
  var style = "\n  ." + name + "-exit {\n    z-index: " + zIndex + ";\n  }\n  ." + name + "-exit-active {\n    transform: " + transformActive + ";\n    opacity: " + opacity + ";\n    transition: " + transition + ";\n    transition-delay: " + delay + "ms;\n    transition-duration: " + duration + "ms;\n    transition-timing-function: " + getEasing(easing) + ";\n  }\n  ";
  return style;
});

var shuffle = buildTiger( // common
{
  direction: 'left'
}, // enter
{
  duration: 600,
  easing: 'easeOutQuad',
  opacity: 1,
  zIndex: 2,
  scale: 1,
  delay: 0
}, glideIn, // exit
{
  duration: 600,
  easing: 'easeOutQuad',
  opacity: 0.3,
  zIndex: 1,
  scale: 1,
  delay: 0
}, shuffleOut);

var scaleIn = (function (_temp) {
  var _ref = _temp === void 0 ? {} : _temp,
      _ref$name = _ref.name,
      name = _ref$name === void 0 ? 'scale' : _ref$name,
      _ref$duration = _ref.duration,
      duration = _ref$duration === void 0 ? 600 : _ref$duration,
      _ref$easing = _ref.easing,
      easing = _ref$easing === void 0 ? 'ease' : _ref$easing,
      _ref$opacity = _ref.opacity,
      opacity = _ref$opacity === void 0 ? 1 : _ref$opacity,
      _ref$scale = _ref.scale,
      scale = _ref$scale === void 0 ? 0.8 : _ref$scale,
      _ref$zIndex = _ref.zIndex,
      zIndex = _ref$zIndex === void 0 ? 1 : _ref$zIndex,
      _ref$delay = _ref.delay,
      delay = _ref$delay === void 0 ? 0 : _ref$delay;

  var style = "\n  ." + name + "-enter {\n    z-index: " + zIndex + ";\n    opacity: " + opacity + ";\n    transform: scale(" + scale + ");\n  }\n  ." + name + "-enter-active {\n    opacity: 1;\n    transform: scale(1);\n    transition: opacity, transform;\n    transition-delay: " + delay + "ms;\n    transition-duration: " + duration + "ms;\n    transition-timing-function: " + getEasing(easing) + ";\n  }\n  ";
  return style;
});

var scaleOut = (function (_temp) {
  var _ref = _temp === void 0 ? {} : _temp,
      _ref$name = _ref.name,
      name = _ref$name === void 0 ? 'scale' : _ref$name,
      _ref$duration = _ref.duration,
      duration = _ref$duration === void 0 ? 600 : _ref$duration,
      _ref$easing = _ref.easing,
      easing = _ref$easing === void 0 ? 'ease' : _ref$easing,
      _ref$opacity = _ref.opacity,
      opacity = _ref$opacity === void 0 ? 1 : _ref$opacity,
      _ref$scale = _ref.scale,
      scale = _ref$scale === void 0 ? 0.8 : _ref$scale,
      _ref$zIndex = _ref.zIndex,
      zIndex = _ref$zIndex === void 0 ? 1 : _ref$zIndex,
      _ref$delay = _ref.delay,
      delay = _ref$delay === void 0 ? 0 : _ref$delay;

  var style = "\n  ." + name + "-exit {\n    z-index: " + zIndex + ";\n  }\n  ." + name + "-exit-active {\n    opacity: " + opacity + ";\n    transform: scale(" + scale + ");\n    transition: opacity, transform;\n    transition-delay: " + delay + "ms;\n    transition-duration: " + duration + "ms;\n    transition-timing-function: " + getEasing(easing) + ";\n  }\n  ";
  return style;
});

var fade = buildTiger( // common
{}, // enter
{
  duration: 600,
  easing: 'ease-in',
  zIndex: 1,
  opacity: 0,
  scale: 1
}, scaleIn, // exit
{
  duration: 600,
  easing: 'ease-in',
  opacity: 0,
  zIndex: 2,
  delay: 0,
  scale: 1
}, scaleOut);

var scale = buildTiger( // common
{}, // enter
{
  duration: 300,
  easing: 'ease',
  zIndex: 2,
  delay: 300,
  opacity: 0,
  scale: 0.8
}, scaleIn, // exit
{
  duration: 300,
  easing: 'ease',
  opacity: 0,
  zIndex: 1,
  delay: 0,
  scale: 0.8
}, scaleOut);

var carouselIn = (function (_temp) {
  var _ref = _temp === void 0 ? {} : _temp,
      _ref$name = _ref.name,
      name = _ref$name === void 0 ? 'carousel' : _ref$name,
      _ref$direction = _ref.direction,
      direction = _ref$direction === void 0 ? 'left' : _ref$direction,
      _ref$duration = _ref.duration,
      duration = _ref$duration === void 0 ? 600 : _ref$duration,
      _ref$easing = _ref.easing,
      easing = _ref$easing === void 0 ? 'ease-in' : _ref$easing,
      _ref$opacity = _ref.opacity,
      opacity = _ref$opacity === void 0 ? 0.3 : _ref$opacity,
      _ref$zIndex = _ref.zIndex,
      zIndex = _ref$zIndex === void 0 ? 1 : _ref$zIndex,
      _ref$offset = _ref.offset,
      offset = _ref$offset === void 0 ? 300 : _ref$offset,
      _ref$angle = _ref.angle,
      angle = _ref$angle === void 0 ? 65 : _ref$angle,
      _ref$scale = _ref.scale,
      scale = _ref$scale === void 0 ? 0.4 : _ref$scale,
      _ref$delay = _ref.delay,
      delay = _ref$delay === void 0 ? 0 : _ref$delay;

  var config = {
    left: {
      origin: '0% 50%',
      transform: "translateX(" + offset + "%) rotateY(" + angle + "deg) scale(" + scale + ")",
      transformActive: 'translateX(0px) rotateY(0deg)'
    },
    right: {
      origin: '100% 50%',
      transform: "translateX(" + -offset + "%) rotateY(" + -angle + "deg) scale(" + scale + ")",
      transformActive: 'translateX(0px) rotateY(0deg)'
    },
    top: {
      origin: '50% 0%',
      transform: "translateY(" + offset + "%) rotateX(" + -angle + "deg) scale(" + scale + ")",
      transformActive: 'translateY(0px) rotateX(0deg)'
    },
    bottom: {
      origin: '50% 100%',
      transform: "translateY(" + -offset + "%) rotateX(" + angle + "deg) scale(" + scale + ")",
      transformActive: 'translateY(0px) rotateX(0deg)'
    }
  };
  var transition = "transform, opacity";
  var style = "\n  ." + name + "-enter {\n    transformOrigin: " + config[direction].origin + ";\n    transform: " + config[direction].transform + ";\n    z-index: " + zIndex + ";\n    opacity: " + opacity + ";\n  }\n  ." + name + "-enter-active {\n    transform: " + config[direction].transformActive + ";\n    opacity: 1;\n    transition: " + transition + ";\n    transition-delay: " + delay + "ms;\n    transition-duration: " + duration + "ms;\n    transition-timing-function: " + getEasing(easing) + ";\n  }\n  ";
  return style;
});

var carouselOut = (function (_temp) {
  var _ref = _temp === void 0 ? {} : _temp,
      _ref$name = _ref.name,
      name = _ref$name === void 0 ? 'carousel' : _ref$name,
      _ref$direction = _ref.direction,
      direction = _ref$direction === void 0 ? 'left' : _ref$direction,
      _ref$duration = _ref.duration,
      duration = _ref$duration === void 0 ? 600 : _ref$duration,
      _ref$easing = _ref.easing,
      easing = _ref$easing === void 0 ? 'ease-in' : _ref$easing,
      _ref$opacity = _ref.opacity,
      opacity = _ref$opacity === void 0 ? 0.3 : _ref$opacity,
      _ref$zIndex = _ref.zIndex,
      zIndex = _ref$zIndex === void 0 ? 2 : _ref$zIndex,
      _ref$offset = _ref.offset,
      offset = _ref$offset === void 0 ? 300 : _ref$offset,
      _ref$angle = _ref.angle,
      angle = _ref$angle === void 0 ? 65 : _ref$angle,
      _ref$scale = _ref.scale,
      scale = _ref$scale === void 0 ? 0.4 : _ref$scale,
      _ref$delay = _ref.delay,
      delay = _ref$delay === void 0 ? 0 : _ref$delay;

  var config = {
    left: {
      origin: '100% 50%',
      transformActive: "translateX(" + -offset + "%) rotateY(" + -angle + "deg) scale(" + scale + ")"
    },
    right: {
      origin: '0% 50%',
      transformActive: "translateX(" + offset + "%) rotateY(" + angle + "deg) scale(" + scale + ")"
    },
    top: {
      origin: '50% 100%',
      transformActive: "translateY(" + -offset + "%) rotateX(" + angle + "deg) scale(" + scale + ")"
    },
    bottom: {
      origin: '50% 0%',
      transformActive: "translateY(" + offset + "%) rotateX(" + -angle + "deg) scale(" + scale + ")"
    }
  };
  var transition = "transform, opacity";
  var style = "\n  ." + name + "-exit {\n    transformOrigin: " + config[direction].origin + ";\n    z-index: " + zIndex + ";\n  }\n  ." + name + "-exit-active {\n    transform: " + config[direction].transformActive + ";\n    opacity: " + opacity + ";\n    transition: " + transition + ";\n    transition-delay: " + delay + "ms;\n    transition-duration: " + duration + "ms;\n    transition-timing-function: " + getEasing(easing) + ";\n  }\n  ";
  return style;
});

var carousel = buildTiger( // common
{
  direction: 'left'
}, // enter
{
  duration: 600,
  opacity: 0.3,
  easing: 'easeInOutCubic',
  zIndex: 1,
  delay: 0,
  scale: 0.4,
  offset: 300,
  angle: 65
}, carouselIn, // exit
{
  duration: 600,
  opacity: 0.3,
  easing: 'easeInOutCubic',
  zIndex: 2,
  delay: 0,
  scale: 0.4,
  offset: 300,
  angle: 65
}, carouselOut);

var cubeIn = (function (_temp) {
  var _ref = _temp === void 0 ? {} : _temp,
      _ref$name = _ref.name,
      name = _ref$name === void 0 ? 'cube' : _ref$name,
      _ref$direction = _ref.direction,
      direction = _ref$direction === void 0 ? 'left' : _ref$direction,
      _ref$duration = _ref.duration,
      duration = _ref$duration === void 0 ? 700 : _ref$duration,
      _ref$easing = _ref.easing,
      easing = _ref$easing === void 0 ? 'ease-in' : _ref$easing,
      _ref$opacity = _ref.opacity,
      opacity = _ref$opacity === void 0 ? 0.3 : _ref$opacity,
      _ref$zIndex = _ref.zIndex,
      zIndex = _ref$zIndex === void 0 ? 1 : _ref$zIndex,
      _ref$depth = _ref.depth,
      depth = _ref$depth === void 0 ? 200 : _ref$depth,
      _ref$delay = _ref.delay,
      delay = _ref$delay === void 0 ? 0 : _ref$delay;

  var config = {
    left: ['0% 50%', 'X(100%)', 'Y(90deg)', 'X(50%)', 'Y(45deg)'],
    right: ['100% 50%', 'X(-100%)', 'Y(-90deg)', 'X(-50%)', 'Y(-45deg)'],
    top: ['50% 0%', 'Y(100%)', 'X(-90deg)', 'Y(50%)', 'X(-45deg)'],
    bottom: ['50% 100%', 'Y(-100%)', 'X(90deg)', 'Y(-50%)', 'X(45deg)']
  };
  var animationName = name + "--react-tiger-transition-cube-in";
  var transformOrigin = config[direction][0];
  var animationCss = animationName + " " + duration + "ms both " + getEasing(easing);
  var transform0 = "translate" + config[direction][1] + " rotate" + config[direction][2];
  var transform50 = "translate" + config[direction][3] + " translateZ(" + -depth + "px) rotate" + config[direction][4];
  var style = "\n  ." + name + "-enter {\n    transform-origin: " + transformOrigin + ";\n    z-index: " + zIndex + ";\n    opacity: " + opacity + ";\n  }\n  ." + name + "-enter-active {\n    animation: " + animationCss + ";\n    animation-delay: " + delay + "ms;\n  }\n  @keyframes " + animationName + " {\n    0% {\n      opacity: " + opacity + ";\n      transform: " + transform0 + ";\n    }\n    50% {\n      transform: " + transform50 + ";\n      animation-timing-function: ease-out;\n    }\n    100% {\n      opacity: 1;\n    }\n  }\n  ";
  return style;
});

var cubeOut = (function (_temp) {
  var _ref = _temp === void 0 ? {} : _temp,
      _ref$name = _ref.name,
      name = _ref$name === void 0 ? 'cube' : _ref$name,
      _ref$direction = _ref.direction,
      direction = _ref$direction === void 0 ? 'left' : _ref$direction,
      _ref$duration = _ref.duration,
      duration = _ref$duration === void 0 ? 700 : _ref$duration,
      _ref$easing = _ref.easing,
      easing = _ref$easing === void 0 ? 'ease-in' : _ref$easing,
      _ref$opacity = _ref.opacity,
      opacity = _ref$opacity === void 0 ? 0.3 : _ref$opacity,
      _ref$zIndex = _ref.zIndex,
      zIndex = _ref$zIndex === void 0 ? 2 : _ref$zIndex,
      _ref$depth = _ref.depth,
      depth = _ref$depth === void 0 ? 200 : _ref$depth,
      _ref$delay = _ref.delay,
      delay = _ref$delay === void 0 ? 0 : _ref$delay;

  var config = {
    left: ['100% 50%', 'X(-50%)', 'Y(-45deg)', 'X(-100%)', 'Y(-90deg)'],
    right: ['0% 50%', 'X(50%)', 'Y(45deg)', 'X(100%)', 'Y(90deg)'],
    top: ['50% 100%', 'Y(-50%)', 'X(45deg)', 'Y(-100%)', 'X(90deg)'],
    bottom: ['50% 0%', 'Y(50%)', 'X(-45deg)', 'Y(100%)', 'X(-90deg)']
  };
  var animationName = name + "--react-tiger-transition-cube-out";
  var transformOrigin = config[direction][0];
  var animationCss = animationName + " " + duration + "ms both " + getEasing(easing);
  var transform50 = "translate" + config[direction][1] + " translateZ(" + -depth + "px) rotate" + config[direction][2];
  var transform100 = "translate" + config[direction][3] + " rotate" + config[direction][4];
  var style = "\n  ." + name + "-exit {\n    transform-origin: " + transformOrigin + ";\n    z-index: " + zIndex + ";\n    opacity: 1;\n  }\n  ." + name + "-exit-active {\n    animation: " + animationCss + ";\n    animation-delay: " + delay + "ms;\n  }\n  @keyframes " + animationName + " {\n    0% {\n      opacity: 1;\n    }\n    50% {\n      transform: " + transform50 + ";\n      animation-timing-function: ease-out;\n    }\n    100% {\n      opacity: " + opacity + ";\n      transform: " + transform100 + ";\n    }\n  }\n  ";
  return style;
});

var cube = buildTiger( // common
{
  direction: 'left',
  depth: 1000
}, // enter
{
  duration: 600,
  easing: 'ease-in',
  opacity: 0.3,
  zIndex: 1,
  delay: 0
}, cubeIn, // exit
{
  duration: 600,
  easing: 'ease-in',
  opacity: 0.3,
  zIndex: 2,
  delay: 0
}, cubeOut);

var foldRules = (function (_temp) {
  var _ref = _temp === void 0 ? {} : _temp,
      _ref$name = _ref.name,
      name = _ref$name === void 0 ? 'folde' : _ref$name,
      _ref$direction = _ref.direction,
      direction = _ref$direction === void 0 ? 'left' : _ref$direction,
      _ref$duration = _ref.duration,
      duration = _ref$duration === void 0 ? 700 : _ref$duration,
      _ref$easing = _ref.easing,
      easing = _ref$easing === void 0 ? 'ease' : _ref$easing,
      _ref$opacity = _ref.opacity,
      opacity = _ref$opacity === void 0 ? 1 : _ref$opacity,
      _ref$angle = _ref.angle,
      angle = _ref$angle === void 0 ? 90 : _ref$angle,
      _ref$zIndex = _ref.zIndex,
      zIndex = _ref$zIndex === void 0 ? 1 : _ref$zIndex,
      _ref$delay = _ref.delay,
      delay = _ref$delay === void 0 ? 0 : _ref$delay;

  var config = {
    left: {
      origin: '100% 50%',
      transformActive: "translateX(-100%) rotateY(" + -angle + "deg)"
    },
    right: {
      origin: '0% 50%',
      transformActive: "translateX(100%) rotateY(" + angle + "deg)"
    },
    top: {
      origin: '50% 100%',
      transformActive: "translateY(-100%) rotateX(" + angle + "deg)"
    },
    bottom: {
      origin: '50% 0%',
      transformActive: "translateY(100%) rotateX(" + -angle + "deg)"
    }
  };
  var transition = "transform, opacity";
  var style = "\n  ." + name + "-exit {\n    transform-origin: " + config[direction].origin + ";\n    z-index: " + zIndex + ";\n  }\n  ." + name + "-exit-active {\n    transform: " + config[direction].transformActive + ";\n    opacity: " + opacity + ";\n    transition: " + transition + ";\n    transition-delay: " + delay + "ms;\n    transition-duration: " + duration + "ms;\n    transition-timing-function: " + getEasing(easing) + ";\n  }\n  ";
  return style;
});

var fold = buildTiger( // common
{
  direction: 'left'
}, // enter
{
  duration: 600,
  easing: 'ease',
  opacity: 0.3,
  zIndex: 2,
  delay: 0
}, glideIn, // exit
{
  duration: 600,
  easing: 'ease',
  opacity: 0.3,
  zIndex: 1,
  angle: 90,
  delay: 0
}, foldRules);

var unfoldRules = (function (_temp) {
  var _ref = _temp === void 0 ? {} : _temp,
      _ref$name = _ref.name,
      name = _ref$name === void 0 ? 'unfold' : _ref$name,
      _ref$direction = _ref.direction,
      direction = _ref$direction === void 0 ? 'left' : _ref$direction,
      _ref$duration = _ref.duration,
      duration = _ref$duration === void 0 ? 700 : _ref$duration,
      _ref$easing = _ref.easing,
      easing = _ref$easing === void 0 ? 'ease' : _ref$easing,
      _ref$opacity = _ref.opacity,
      opacity = _ref$opacity === void 0 ? 1 : _ref$opacity,
      _ref$angle = _ref.angle,
      angle = _ref$angle === void 0 ? 90 : _ref$angle,
      _ref$zIndex = _ref.zIndex,
      zIndex = _ref$zIndex === void 0 ? 2 : _ref$zIndex,
      _ref$delay = _ref.delay,
      delay = _ref$delay === void 0 ? 0 : _ref$delay;

  var config = {
    right: {
      origin: '100% 50%',
      transform: "rotateY(" + -angle + "deg) translateX(-100%)",
      transformActive: 'rotateY(0deg) translateX(0px)'
    },
    left: {
      origin: '0% 50%',
      transform: "rotateY(" + angle + "deg) translateX(100%)",
      transformActive: 'rotateY(0deg) translateX(0px)'
    },
    top: {
      origin: '50% 0%',
      transform: "rotateX(" + -angle + "deg) translateY(100%)",
      transformActive: 'rotateX(0deg) translateY(0px)'
    },
    bottom: {
      origin: '50% 100%',
      transform: "rotateX(" + angle + "deg) translateY(-100%)",
      transformActive: 'rotateX(0deg) translateY(0px)'
    }
  };
  var transition = "transform, opacity";
  var style = "\n  ." + name + "-enter {\n    transform-origin: " + config[direction].origin + ";\n    transform: " + config[direction].transform + ";\n    z-index: " + zIndex + ";\n    opacity: " + opacity + ";\n  }\n  ." + name + "-enter-active {\n    transform: " + config[direction].transformActive + ";\n    opacity: 1;\n    transition: " + transition + ";\n    transition-delay: " + delay + "ms;\n    transition-duration: " + duration + "ms;\n    transition-timing-function: " + getEasing(easing) + ";\n  }\n  ";
  return style;
});

var unfold = buildTiger( // common
{
  direction: 'left'
}, // enter
{
  duration: 600,
  easing: 'ease',
  opacity: 0.3,
  zIndex: 1,
  angle: 90,
  delay: 0
}, unfoldRules, // exit
{
  duration: 600,
  easing: 'ease',
  opacity: 1,
  zIndex: 2,
  delay: 0
}, glideOut);

var glideIn$1 = buildTiger( // common
{
  direction: 'left'
}, // enter
{
  duration: 600,
  easing: 'ease',
  opacity: 1,
  zIndex: 2,
  delay: 0
}, glideIn, // exit
{
  duration: 600,
  easing: 'ease',
  opacity: 0.3,
  zIndex: 1,
  scale: 1,
  delay: 0
}, scaleOut);

var glideOut$1 = buildTiger( // common
{
  direction: 'left'
}, // enter
{
  duration: 600,
  easing: 'ease',
  opacity: 0.3,
  zIndex: 1,
  delay: 0,
  scale: 1
}, scaleIn, // exit
{
  duration: 600,
  easing: 'ease',
  opacity: 1,
  zIndex: 2,
  delay: 0
}, glideOut);

var drop = buildTiger( // common
{
  direction: 'left'
}, // enter
{
  duration: 600,
  easing: 'ease',
  opacity: 1,
  zIndex: 2,
  delay: 0
}, glideIn, // exit
{
  duration: 600,
  easing: 'ease',
  opacity: 0.3,
  zIndex: 1,
  scale: 0.6,
  delay: 0
}, scaleOut);

var rise = buildTiger( // common
{
  direction: 'left'
}, // enter
{
  duration: 600,
  easing: 'ease',
  opacity: 0.3,
  zIndex: 1,
  delay: 0,
  scale: 0.6
}, scaleIn, // exit
{
  duration: 600,
  easing: 'ease',
  opacity: 1,
  zIndex: 2,
  delay: 0
}, glideOut);

var roomIn = (function (_temp) {
  var _ref = _temp === void 0 ? {} : _temp,
      _ref$name = _ref.name,
      name = _ref$name === void 0 ? 'room' : _ref$name,
      _ref$direction = _ref.direction,
      direction = _ref$direction === void 0 ? 'left' : _ref$direction,
      _ref$duration = _ref.duration,
      duration = _ref$duration === void 0 ? 700 : _ref$duration,
      _ref$easing = _ref.easing,
      easing = _ref$easing === void 0 ? 'ease-in' : _ref$easing,
      _ref$opacity = _ref.opacity,
      opacity = _ref$opacity === void 0 ? 0.3 : _ref$opacity,
      _ref$zIndex = _ref.zIndex,
      zIndex = _ref$zIndex === void 0 ? 1 : _ref$zIndex,
      _ref$angle = _ref.angle,
      angle = _ref$angle === void 0 ? 90 : _ref$angle,
      _ref$delay = _ref.delay,
      delay = _ref$delay === void 0 ? 0 : _ref$delay;

  var config = {
    left: {
      origin: '0% 50%',
      transform: "translateX(100%) rotateY(" + -angle + "deg)",
      transformActive: "translateX(0px) rotateY(0deg)"
    },
    right: {
      origin: '100% 50%',
      transform: "translateX(-100%) rotateY(" + angle + "deg)",
      transformActive: "translateX(0px) rotateY(0deg)"
    },
    top: {
      origin: '50% 0%',
      transform: "translateY(100%) rotateX(" + angle + "deg)",
      transformActive: "translateY(0px) rotateX(0deg)"
    },
    bottom: {
      origin: '50% 100%',
      transform: "translateY(-100%) rotateX(" + -angle + "deg)",
      transformActive: "translateY(0px) rotateX(0deg)"
    }
  };
  var transition = "transform, opacity";
  var style = "\n  ." + name + "-enter {\n    transform-origin: " + config[direction].origin + ";\n    transform: " + config[direction].transform + ";\n    z-index: " + zIndex + ";\n    opacity: " + opacity + ";\n  }\n  ." + name + "-enter-active {\n    transform: " + config[direction].transformActive + ";\n    opacity: 1;\n    transition: " + transition + ";\n    transition-delay: " + delay + "ms;\n    transition-duration: " + duration + "ms;\n    transition-timing-function: " + getEasing(easing) + ";\n  }\n  ";
  return style;
});

var roomOut = (function (_temp) {
  var _ref = _temp === void 0 ? {} : _temp,
      _ref$name = _ref.name,
      name = _ref$name === void 0 ? 'room' : _ref$name,
      _ref$direction = _ref.direction,
      direction = _ref$direction === void 0 ? 'left' : _ref$direction,
      _ref$duration = _ref.duration,
      duration = _ref$duration === void 0 ? 700 : _ref$duration,
      _ref$easing = _ref.easing,
      easing = _ref$easing === void 0 ? 'ease-in' : _ref$easing,
      _ref$opacity = _ref.opacity,
      opacity = _ref$opacity === void 0 ? 0.3 : _ref$opacity,
      _ref$zIndex = _ref.zIndex,
      zIndex = _ref$zIndex === void 0 ? 2 : _ref$zIndex,
      _ref$angle = _ref.angle,
      angle = _ref$angle === void 0 ? 90 : _ref$angle,
      _ref$delay = _ref.delay,
      delay = _ref$delay === void 0 ? 0 : _ref$delay;

  var config = {
    left: {
      origin: '100% 50%',
      transformActive: "translateX(-100%) rotateY(" + angle + "deg)"
    },
    right: {
      origin: '0% 50%',
      transformActive: "translateX(100%) rotateY(" + -angle + "deg)"
    },
    top: {
      origin: '50% 100%',
      transformActive: "translateY(-100%) rotateX(" + -angle + "deg)"
    },
    bottom: {
      origin: '50% 0%',
      transformActive: "translateY(100%) rotateX(" + angle + "deg)"
    }
  };
  var transition = "transform, opacity";
  var style = "\n  ." + name + "-exit {\n    transform-origin: " + config[direction].origin + ";\n    z-index: " + zIndex + ";\n  }\n  ." + name + "-exit-active {\n    transform: " + config[direction].transformActive + ";\n    opacity: " + opacity + ";\n    transition: " + transition + ";\n    transition-delay: " + delay + "ms;\n    transition-duration: " + duration + "ms;\n    transition-timing-function: " + getEasing(easing) + ";\n  }\n  ";
  return style;
});

var room = buildTiger( // common
{
  direction: 'left',
  angle: 90
}, // enter
{
  duration: 600,
  easing: 'ease',
  opacity: 0.3,
  zIndex: 1,
  delay: 0
}, roomIn, // exit
{
  duration: 600,
  easing: 'ease',
  opacity: 0.3,
  zIndex: 2,
  delay: 0
}, roomOut);

var pull = (function (_temp) {
  var _ref = _temp === void 0 ? {} : _temp,
      _ref$name = _ref.name,
      name = _ref$name === void 0 ? 'pull' : _ref$name,
      _ref$direction = _ref.direction,
      direction = _ref$direction === void 0 ? 'left' : _ref$direction,
      _ref$duration = _ref.duration,
      duration = _ref$duration === void 0 ? 700 : _ref$duration,
      _ref$easing = _ref.easing,
      easing = _ref$easing === void 0 ? 'ease' : _ref$easing,
      _ref$opacity = _ref.opacity,
      opacity = _ref$opacity === void 0 ? 1 : _ref$opacity,
      _ref$angle = _ref.angle,
      angle = _ref$angle === void 0 ? 90 : _ref$angle,
      _ref$zIndex = _ref.zIndex,
      zIndex = _ref$zIndex === void 0 ? 2 : _ref$zIndex,
      _ref$delay = _ref.delay,
      delay = _ref$delay === void 0 ? 0 : _ref$delay;

  var config = {
    left: {
      origin: '100% 50%',
      transform: "rotateY(" + -angle + "deg)",
      transformActive: 'rotateY(0deg)'
    },
    right: {
      origin: '0% 50%',
      transform: "rotateY(" + angle + "deg)",
      transformActive: 'rotateY(0deg)'
    },
    bottom: {
      origin: '50% 0%',
      transform: "rotateX(" + -angle + "deg)",
      transformActive: 'rotateX(0deg)'
    },
    top: {
      origin: '50% 100%',
      transform: "rotateX(" + angle + "deg)",
      transformActive: 'rotateX(0deg)'
    }
  };
  var transition = "transform, opacity";
  var style = "\n  ." + name + "-enter {\n    transform-origin: " + config[direction].origin + ";\n    transform: " + config[direction].transform + ";\n    z-index: " + zIndex + ";\n    opacity: " + opacity + ";\n  }\n  ." + name + "-enter-active {\n    transform: " + config[direction].transformActive + ";\n    opacity: 1;\n    transition: " + transition + ";\n    transition-delay: " + delay + "ms;\n    transition-duration: " + duration + "ms;\n    transition-timing-function: " + getEasing(easing) + ";\n  }\n  ";
  return style;
});

var pull$1 = buildTiger( // common
{
  direction: 'left'
}, // enter
{
  duration: 600,
  easing: 'easeOutBack',
  opacity: 0.3,
  zIndex: 1,
  delay: 0,
  angle: 90
}, pull, // exit
{
  duration: 600,
  easing: 'easeOutBack',
  opacity: 1,
  zIndex: 2,
  delay: 0
}, glideOut);

var push = (function (_temp) {
  var _ref = _temp === void 0 ? {} : _temp,
      _ref$name = _ref.name,
      name = _ref$name === void 0 ? 'push' : _ref$name,
      _ref$direction = _ref.direction,
      direction = _ref$direction === void 0 ? 'left' : _ref$direction,
      _ref$duration = _ref.duration,
      duration = _ref$duration === void 0 ? 700 : _ref$duration,
      _ref$easing = _ref.easing,
      easing = _ref$easing === void 0 ? 'ease' : _ref$easing,
      _ref$opacity = _ref.opacity,
      opacity = _ref$opacity === void 0 ? 1 : _ref$opacity,
      _ref$angle = _ref.angle,
      angle = _ref$angle === void 0 ? 90 : _ref$angle,
      _ref$zIndex = _ref.zIndex,
      zIndex = _ref$zIndex === void 0 ? 1 : _ref$zIndex,
      _ref$delay = _ref.delay,
      delay = _ref$delay === void 0 ? 0 : _ref$delay;

  var config = {
    right: {
      origin: '100% 50%',
      transformActive: "rotateY(" + -angle + "deg)"
    },
    left: {
      origin: '0% 50%',
      transformActive: "rotateY(" + angle + "deg)"
    },
    top: {
      origin: '50% 100%',
      transformActive: "rotateX(" + -angle + "deg)"
    },
    bottom: {
      origin: '50% 0%',
      transformActive: "rotateX(" + angle + "deg)"
    }
  };
  var transition = "transform, opacity";
  var style = "\n  ." + name + "-exit {\n    transform-origin: " + config[direction].origin + ";\n    z-index: " + zIndex + ";\n  }\n  ." + name + "-exit-active {\n    transform: " + config[direction].transformActive + ";\n    opacity: " + opacity + ";\n    transition: " + transition + ";\n    transition-delay: " + delay + "ms;\n    transition-duration: " + duration + "ms;\n    transition-timing-function: " + getEasing(easing) + ";\n  }\n  ";
  return style;
});

var push$1 = buildTiger( // common
{
  direction: 'left'
}, // enter
{
  duration: 600,
  easing: 'easeInBack',
  opacity: 1,
  zIndex: 2,
  delay: 0
}, glideIn, // exit
{
  duration: 600,
  easing: 'easeInBack',
  opacity: 0.3,
  zIndex: 1,
  angle: 90,
  delay: 0
}, push);

var pushPull = buildTiger( // common
{
  direction: 'left'
}, // enter
{
  duration: 500,
  easing: 'easeInOutBack',
  opacity: 0,
  zIndex: 1,
  angle: 90,
  delay: 100
}, pull, // exit
{
  duration: 500,
  easing: 'easeInOutBack',
  opacity: 0,
  zIndex: 2,
  angle: 90
}, push);

var sideIn = (function (_temp) {
  var _ref = _temp === void 0 ? {} : _temp,
      _ref$name = _ref.name,
      name = _ref$name === void 0 ? 'side' : _ref$name,
      _ref$direction = _ref.direction,
      direction = _ref$direction === void 0 ? 'left' : _ref$direction,
      _ref$duration = _ref.duration,
      duration = _ref$duration === void 0 ? 700 : _ref$duration,
      _ref$easing = _ref.easing,
      easing = _ref$easing === void 0 ? 'ease-in' : _ref$easing,
      _ref$opacity = _ref.opacity,
      opacity = _ref$opacity === void 0 ? 0.3 : _ref$opacity,
      _ref$zIndex = _ref.zIndex,
      zIndex = _ref$zIndex === void 0 ? 1 : _ref$zIndex,
      _ref$depth = _ref.depth,
      depth = _ref$depth === void 0 ? 500 : _ref$depth,
      _ref$angle = _ref.angle,
      angle = _ref$angle === void 0 ? 90 : _ref$angle,
      _ref$offset = _ref.offset,
      offset = _ref$offset === void 0 ? 100 : _ref$offset,
      _ref$delay = _ref.delay,
      delay = _ref$delay === void 0 ? 0 : _ref$delay;

  var config = {
    left: {
      origin: 50 + offset + "% 50%",
      transform: "translateZ(" + -depth + "px) rotateY(" + -angle + "deg)",
      transformActive: "translateX(0px) rotateY(0deg)"
    },
    right: {
      origin: -(50 + offset) + "% 50%",
      transform: "translateZ(" + depth + "px) rotateY(" + angle + "deg)",
      transformActive: "translateX(0px) rotateY(0deg)"
    },
    bottom: {
      origin: "50% " + (50 + offset) + "%",
      transform: "translateZ(" + -depth + "px) rotateX(" + angle + "deg)",
      transformActive: "translateY(0px) rotateX(0deg)"
    },
    top: {
      origin: "50% " + -(50 + offset) + "%",
      transform: "translateZ(" + -depth + "px) rotateX(" + -angle + "deg)",
      transformActive: "translateY(0px) rotateX(0deg)"
    }
  };
  var transition = "transform, opacity";
  var style = "\n  ." + name + "-enter {\n    transform-origin: " + config[direction].origin + ";\n    transform: " + config[direction].transform + ";\n    z-index: " + zIndex + ";\n    opacity: " + opacity + ";\n  }\n  ." + name + "-enter-active {\n    transform: " + config[direction].transformActive + ";\n    opacity: 1;\n    transition: " + transition + ";\n    transition-delay: " + delay + "ms;\n    transition-duration: " + duration + "ms;\n    transition-timing-function: " + getEasing(easing) + ";\n  }\n  ";
  return style;
});

var sideOut = (function (_temp) {
  var _ref = _temp === void 0 ? {} : _temp,
      _ref$name = _ref.name,
      name = _ref$name === void 0 ? 'side' : _ref$name,
      _ref$direction = _ref.direction,
      direction = _ref$direction === void 0 ? 'left' : _ref$direction,
      _ref$duration = _ref.duration,
      duration = _ref$duration === void 0 ? 700 : _ref$duration,
      _ref$easing = _ref.easing,
      easing = _ref$easing === void 0 ? 'ease-in' : _ref$easing,
      _ref$opacity = _ref.opacity,
      opacity = _ref$opacity === void 0 ? 0.3 : _ref$opacity,
      _ref$zIndex = _ref.zIndex,
      zIndex = _ref$zIndex === void 0 ? 2 : _ref$zIndex,
      _ref$depth = _ref.depth,
      depth = _ref$depth === void 0 ? 500 : _ref$depth,
      _ref$angle = _ref.angle,
      angle = _ref$angle === void 0 ? 90 : _ref$angle,
      _ref$offset = _ref.offset,
      offset = _ref$offset === void 0 ? 100 : _ref$offset,
      _ref$delay = _ref.delay,
      delay = _ref$delay === void 0 ? 0 : _ref$delay;

  var config = {
    left: {
      origin: 50 - offset + "% 50%",
      transformActive: "translateZ(" + depth + "px) rotateY(" + angle + "deg)"
    },
    right: {
      origin: 50 + offset + "% 50%",
      transformActive: "translateZ(" + -depth + "px) rotateY(" + -angle + "deg)"
    },
    bottom: {
      origin: "50% " + (50 - offset) + "%",
      transformActive: "translateZ(" + -depth + "px) rotateX(" + -angle + "deg)"
    },
    top: {
      origin: "50% " + (50 + offset) + "%",
      transformActive: "translateZ(" + -depth + "px) rotateX(" + angle + "deg)"
    }
  };
  var transition = "transform, opacity";
  var style = "\n  ." + name + "-exit {\n    transform-origin: " + config[direction].origin + ";\n    z-index: " + zIndex + ";\n  }\n  ." + name + "-exit-active {\n    transform: " + config[direction].transformActive + ";\n    opacity: " + opacity + ";\n    transition: " + transition + ";\n    transition-delay: " + delay + "ms;\n    transition-duration: " + duration + "ms;\n    transition-timing-function: " + getEasing(easing) + ";\n  }\n  ";
  return style;
});

var side = buildTiger( // common
{
  direction: 'left'
}, // enter
{
  duration: 400,
  easing: 'ease-out',
  opacity: 0,
  zIndex: 1,
  delay: 200,
  depth: 500,
  angle: 90,
  offset: 100
}, sideIn, // exit
{
  duration: 400,
  easing: 'ease-in',
  opacity: 0,
  zIndex: 2,
  depth: 500,
  angle: 90,
  offset: 100,
  delay: 0
}, sideOut);

var slideIn = (function (_temp) {
  var _ref = _temp === void 0 ? {} : _temp,
      _ref$name = _ref.name,
      name = _ref$name === void 0 ? 'slide' : _ref$name,
      _ref$direction = _ref.direction,
      direction = _ref$direction === void 0 ? 'left' : _ref$direction,
      _ref$duration = _ref.duration,
      duration = _ref$duration === void 0 ? 700 : _ref$duration,
      _ref$easing = _ref.easing,
      easing = _ref$easing === void 0 ? 'ease-in' : _ref$easing,
      _ref$opacity = _ref.opacity,
      opacity = _ref$opacity === void 0 ? 0.3 : _ref$opacity,
      _ref$zIndex = _ref.zIndex,
      zIndex = _ref$zIndex === void 0 ? 1 : _ref$zIndex,
      _ref$depth = _ref.depth,
      depth = _ref$depth === void 0 ? 500 : _ref$depth,
      _ref$offset = _ref.offset,
      offset = _ref$offset === void 0 ? 200 : _ref$offset,
      _ref$delay = _ref.delay,
      delay = _ref$delay === void 0 ? 0 : _ref$delay;

  var config = {
    left: "X(" + offset + "%)",
    right: "X(" + -offset + "%)",
    top: "Y(" + offset + "%)",
    bottom: "Y(" + -offset + "%)"
  };
  var animationName = name + "--react-tige-transition-slide-in";
  var animationCss = animationName + " " + duration + "ms both " + getEasing(easing);
  var transform0 = "translateZ(" + -depth + "px) translate" + config[direction];
  var transform75 = "translateZ(" + -depth + "px)";
  var style = "\n  ." + name + "-enter {\n    z-index: " + zIndex + ";\n    opacity: " + opacity + ";\n  }\n  ." + name + "-enter-active {\n    animation: " + animationCss + ";\n    animation-delay: " + delay + "ms;\n  }\n  @keyframes " + animationName + " {\n    0%, 25% {\n      opacity: " + opacity + ";\n      transform: " + transform0 + ";\n    }\n    75% {\n      opacity: " + opacity + ";\n      transform: " + transform75 + ";\n    }\n    100% {\n      opacity: 1;\n      transform: translateZ(0) translateX(0);\n    }\n  }\n  ";
  return style;
});

var slideOut = (function (_temp) {
  var _ref = _temp === void 0 ? {} : _temp,
      _ref$name = _ref.name,
      name = _ref$name === void 0 ? 'slide' : _ref$name,
      _ref$direction = _ref.direction,
      direction = _ref$direction === void 0 ? 'left' : _ref$direction,
      _ref$duration = _ref.duration,
      duration = _ref$duration === void 0 ? 700 : _ref$duration,
      _ref$easing = _ref.easing,
      easing = _ref$easing === void 0 ? 'ease-in' : _ref$easing,
      _ref$opacity = _ref.opacity,
      opacity = _ref$opacity === void 0 ? 0.3 : _ref$opacity,
      _ref$zIndex = _ref.zIndex,
      zIndex = _ref$zIndex === void 0 ? 2 : _ref$zIndex,
      _ref$depth = _ref.depth,
      depth = _ref$depth === void 0 ? 500 : _ref$depth,
      _ref$offset = _ref.offset,
      offset = _ref$offset === void 0 ? 200 : _ref$offset,
      _ref$delay = _ref.delay,
      delay = _ref$delay === void 0 ? 0 : _ref$delay;

  var config = {
    left: "X(" + -offset + "%)",
    right: "X(" + offset + "%)",
    top: "Y(" + -offset + "%)",
    bottom: "Y(" + offset + "%)"
  };
  var animationName = name + "--react-tige-transition-slide-out";
  var animationCss = animationName + " " + duration + "ms both " + getEasing(easing);
  var transform25 = "translateZ(" + -depth + "px)";
  var transform75 = "translateZ(" + -depth + "px) translate" + config[direction];
  var transform100 = "translateZ(" + -depth + "px) translate" + config[direction];
  var style = "\n  ." + name + "-exit {\n    z-index: " + zIndex + ";\n    opacity: 1;\n  }\n  ." + name + "-exit-active {\n    animation: " + animationCss + ";\n    animation-delay: " + delay + "ms;\n  }\n  @keyframes " + animationName + " {\n    0% {\n      opacity: 1;\n    }\n    25% {\n      opacity: " + opacity + ";\n      transform: " + transform25 + ";\n    }\n    75% {\n      opacity: " + opacity + ";\n      transform: " + transform75 + ";\n    }\n    100% {\n      opacity: " + opacity + ";\n      transform: " + transform100 + ";\n    }\n  }\n  ";
  return style;
});

var slide = buildTiger( // common
{
  direction: 'left',
  depth: 500,
  offset: 200
}, // enter
{
  duration: 600,
  easing: 'ease',
  opacity: 0.5,
  zIndex: 1,
  delay: 0
}, slideIn, // exit
{
  duration: 600,
  easing: 'ease',
  opacity: 0.5,
  zIndex: 2
}, slideOut);

var glueInRules = (function (_temp) {
  var _ref = _temp === void 0 ? {} : _temp,
      _ref$name = _ref.name,
      name = _ref$name === void 0 ? 'glue' : _ref$name,
      _ref$direction = _ref.direction,
      direction = _ref$direction === void 0 ? 'left' : _ref$direction,
      _ref$duration = _ref.duration,
      duration = _ref$duration === void 0 ? 700 : _ref$duration,
      _ref$easing = _ref.easing,
      easing = _ref$easing === void 0 ? 'ease-in' : _ref$easing,
      _ref$opacity = _ref.opacity,
      opacity = _ref$opacity === void 0 ? 0.3 : _ref$opacity,
      _ref$zIndex = _ref.zIndex,
      zIndex = _ref$zIndex === void 0 ? 1 : _ref$zIndex,
      _ref$depth = _ref.depth,
      depth = _ref$depth === void 0 ? 200 : _ref$depth,
      _ref$angle = _ref.angle,
      angle = _ref$angle === void 0 ? 15 : _ref$angle,
      _ref$delay = _ref.delay,
      delay = _ref$delay === void 0 ? 0 : _ref$delay;

  var config = {
    left: ['100% 50%', "Y(" + -angle + "deg)"],
    right: ['0% 50%', "Y(" + angle + "deg)"],
    top: ['50% 0%', "X(" + -angle + "deg)"],
    bottom: ['50% 100%', "X(" + angle + "deg)"]
  };
  var animationName = name + "--react-tige-transition-glue-in";
  var animationCss = animationName + " " + duration + "ms both " + getEasing(easing);
  var transformOrigin = config[direction][0];
  var transform0 = "translateZ(" + -depth + "px)";
  var transform1 = "rotate" + config[direction][1];
  var style = "\n  ." + name + "-enter {\n    transform-origin: " + transformOrigin + ";\n    z-index: " + zIndex + ";\n    opacity: " + opacity + ";\n    transform: " + transform0 + ";\n  }\n  ." + name + "-enter-active {\n    animation: " + animationCss + ";\n    animation-delay: " + delay + "ms;\n  }\n  @keyframes " + animationName + " {\n    0% {\n      opacity: " + opacity + ";\n      transform: " + transform0 + ";\n    }\n    60% {\n      transform: " + transform1 + ";\n    }\n    100% {\n      transform: translateZ(0px);\n      opacity: 1;\n    }\n  }\n  ";
  return style;
});

var glueIn = buildTiger( // common
{
  direction: 'left'
}, // enter
{
  duration: 600,
  easing: 'ease-in',
  opacity: 0,
  zIndex: 1,
  angle: 15,
  depth: 200,
  delay: 0
}, glueInRules, // exit
{
  duration: 400,
  easing: 'ease',
  opacity: 1,
  zIndex: 2
}, glideOut);

var glueOutRules = (function (_temp) {
  var _ref = _temp === void 0 ? {} : _temp,
      _ref$name = _ref.name,
      name = _ref$name === void 0 ? 'glue' : _ref$name,
      _ref$direction = _ref.direction,
      direction = _ref$direction === void 0 ? 'left' : _ref$direction,
      _ref$duration = _ref.duration,
      duration = _ref$duration === void 0 ? 700 : _ref$duration,
      _ref$easing = _ref.easing,
      easing = _ref$easing === void 0 ? 'ease-in' : _ref$easing,
      _ref$opacity = _ref.opacity,
      opacity = _ref$opacity === void 0 ? 0.3 : _ref$opacity,
      _ref$zIndex = _ref.zIndex,
      zIndex = _ref$zIndex === void 0 ? 1 : _ref$zIndex,
      _ref$depth = _ref.depth,
      depth = _ref$depth === void 0 ? 200 : _ref$depth,
      _ref$angle = _ref.angle,
      angle = _ref$angle === void 0 ? 15 : _ref$angle,
      _ref$delay = _ref.delay,
      delay = _ref$delay === void 0 ? 0 : _ref$delay;

  var config = {
    left: ['0% 50%', "Y(" + angle + "deg)"],
    right: ['100% 50%', "Y(" + -angle + "deg)"],
    top: ['50% 100%', "X(" + angle + "deg)"],
    bottom: ['50% 0%', "X(" + -angle + "deg)"]
  };
  var animationName = name + "--react-tige-transition-glue-out";
  var animationCss = animationName + " " + duration + "ms both " + getEasing(easing);
  var transformOrigin = config[direction][0];
  var transform40 = "rotate" + config[direction][1];
  var transform100 = "translateZ(" + -depth + "px)";
  var style = "\n  ." + name + "-exit {\n    transform-origin: " + transformOrigin + ";\n    z-index: " + zIndex + ";\n    opacity: 1;\n  }\n  ." + name + "-exit-active {\n    animation: " + animationCss + ";\n    animation-delay: " + delay + "ms;\n  }\n  @keyframes " + animationName + " {\n    0% {\n      opacity: 1;\n    }\n    40% {\n      transform: " + transform40 + ";\n    }\n    100% {\n      transform: " + transform100 + ";\n      opacity: " + opacity + ";\n    }\n  }\n  ";
  return style;
});

var glueOut = buildTiger( // common
{
  direction: 'left'
}, // enter
{
  duration: 400,
  easing: 'ease',
  opacity: 1,
  zIndex: 2,
  delay: 200
}, glideIn, // exit
{
  duration: 600,
  easing: 'ease-in',
  opacity: 0,
  zIndex: 1,
  depth: 200,
  angle: 15
}, glueOutRules);

export { Link$1 as Link, Navigation, Route, Screen, buildTiger, carousel, cube, drop, fade, flip, fold, glide, glideIn$1 as glideIn, glideOut$1 as glideOut, glueIn, glueOut, pull$1 as pull, push$1 as push, pushPull, rise, room, scale, shuffle, side, slide, unfold };
//# sourceMappingURL=react-tiger-transition.js.map
